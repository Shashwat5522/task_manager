version: '3.8'

services:
  postgres:
    image: postgres:15-alpine
    container_name: task_manager_db
    env_file:
      - .env
    environment:
      POSTGRES_USER: ${DB_USER:-postgres}
      POSTGRES_PASSWORD: ${DB_PASSWORD:-password}
      POSTGRES_DB: ${DB_NAME:-task_manager}
    ports:
      - "5433:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./init.sql:/docker-entrypoint-initdb.d/init.sql
    networks:
      - task_manager_network
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${DB_USER:-postgres} -d ${DB_NAME:-task_manager}"]
      interval: 10s
      timeout: 5s
      retries: 5
    restart: unless-stopped

  api:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: task_manager_api
    env_file:
      - .env
    environment:
      DB_HOST: postgres
      DB_PORT: 5432
      DB_USER: ${DB_USER:-postgres}
      DB_PASSWORD: ${DB_PASSWORD:-password}
      DB_NAME: ${DB_NAME:-task_manager}
      SERVER_HOST: 0.0.0.0
      SERVER_PORT: ${SERVER_PORT:-8080}
      SERVER_ENV: ${SERVER_ENV:-development}
      JWT_SECRET: ${JWT_SECRET:-your-secret-key-here}
    ports:
      - "${SERVER_PORT:-8080}:8080"
    depends_on:
      postgres:
        condition: service_healthy
    networks:
      - task_manager_network
    restart: unless-stopped

volumes:
  postgres_data:
    driver: local

networks:
  task_manager_network:
    driver: bridge 
